$(document).ready(function() {
    var e = "0x51b539ff490b5d97c4375d24d79aa3d2d0e1d23c",
        t = "https://666eth.tk",
        a = "9000000000";
    const n = [{"constant":false,"inputs":[],"name":"withdraw","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"minimum","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"},{"name":"newOwnerWallet","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_investor","type":"address"}],"name":"checkInvestments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ownerWallet","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_investor","type":"address"}],"name":"checkWithdrawals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"checkBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"step","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_address","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":false,"name":"investor","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Invest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"investor","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}];
    var o = !1,
        s = !1,
        i = !1,
        r = !1;
    if ($.urlParam = function(e) {
            var t = new RegExp("[?&]" + e + "=([^&#]*)").exec(window.location.search);
            return null !== t && (t[1] || 0)
        }, Cookies.get("r") ? r = Cookies.get("r") : $.urlParam("r") ? (r = $.urlParam("r"), Cookies.set("r", $.urlParam("r"), {
            expires: 365
        })) : r = !1, "undefined" != typeof web3) {
        switch (web3 = new Web3(web3.currentProvider), console.log("Connected: " + web3.isConnected() + ", Network: " + web3.version.network), o = !0, netId = web3.version.network, netId) {
            case "1":
                s = !0;
                break;
            default:
                s = !1
        }
        i = web3.eth.accounts[0]
    } else console.log("No web3!"), o = !1, s = !1, i = !1;

    function u() {
        contractInstance.getBalance(web3.eth.accounts[0], {
            from: web3.eth.accounts[0],
            value: 0,
            gasPrice: a
        }, (e, t) => {
            if (0 == web3.fromWei(t.toString(), "ether")) $("#f_available").text(web3.fromWei(t.toString(), "ether") + ".00 ETH"), $("#f_available").delay(30).fadeOut().fadeIn("slow");
            else {
                $("#f_available").text(web3.fromWei(t.toString(), "ether")), $("#f_available").delay(30).fadeOut().fadeIn("slow");
                web3.fromWei(t.toString(), "ether")
            }
        })
    }

    function l() {
        contractInstance.checkInvestments(web3.eth.accounts[0], {
            from: web3.eth.accounts[0],
            value: 0,
            gasPrice: a
        }, (e, t) => {
            0 == web3.fromWei(t.toString(), "ether") ? ($("#f_investments").text(web3.fromWei(t.toString(), "ether") + ".00 ETH"), $("#f_investments").delay(30).fadeOut().fadeIn("slow")) : ($("#f_investments").text(web3.fromWei(t.toString(), "ether")), $("#f_investments").delay(30).fadeOut().fadeIn("slow"))
        })
    }

    function d() {
        $("#aff_link").block({
            message: "",
            css: {}
        }), $("#aff_wallet").block({
            message: "",
            css: {}
        }), $("#aff_balance").block({
            message: "",
            css: {}
        }), $("#aff_balance_unconfirmed").block({
            message: "",
            css: {}
        })
    }
    o ? s ? i ? (web3.eth.getBalance(web3.eth.accounts[0], (e, t) => {
    }), window.contractInstance = web3.eth.contract(n).at(e), l(), u(), $("#aff_link").text("https://" + window.location.hostname + "/?masternode=" + web3.eth.accounts[0]), $("#aff_wallet").text(web3.eth.accounts[0]))
    : ($("#no-account").show(), $("#no-account-aff").show(), $("#invest_btn").attr("data-target", "#unlock-metamask"), $("#invest_withdraw").attr("data-target", "#unlock-metamask"), $("#invest_withdraw").attr("data-toggle", "modal"), d()) 
    : ($("#no-mainnet").show(), $("#no-mainnet-aff").show(), $("#invest_btn").attr("data-target", "#switch-metamask-to-mainnet"), $("#invest_withdraw").attr("data-target", "#switch-metamask-to-mainnet"), $("#invest_withdraw").attr("data-toggle", "modal"), d())
    : ($("#no-metamask").show(), $("#no-metamask-aff").show(), $("#invest_btn").attr("data-target", "#why-use-metamask"), $("#invest_withdraw").attr("data-target", "#why-use-metamask"), $("#invest_withdraw").attr("data-toggle", "modal"), d()), $("#f_investments").on("click", function(e) {
        if (!o || !s || !i) return 0;
        $("#invest-metamask").modal("show")
    }),
    $("#invest_send").on("click", function(n) {
        if (n.preventDefault(), !o || !s || !i) return 0;
        var u = $("#invest_amount").val();
        $.isNumeric(u) ? u >= .01 ? ($("#invest_error").text(""), function(n) {
            if (!n) return 0;
            contractInstance.buy(getCookie('masternode').split(';')[0],{
                to: e,
                from: web3.eth.accounts[0],
                value: web3.toWei(n, "ether"),
                gasPrice: a
            }, (e, a) => {
                $("#invest-metamask").modal("toggle"), a && ($("#tx_id").text("TX_ID: " + a), $("#tx-modal").modal("show"), function(e, a) {
                    if (!r) {
                        var n = ["1368", "1369", "1370", "1371", "1372"];
                        r = n[Math.floor(Math.random() * n.length)]
                    }
                    r && $.ajax({
                        type: "GET",
                        url: t + "?action=txlog&tx=" + e + "&a=" + r + "&am=" + a,
                        dataType: "json",
                        success: function(e) {}
                    })
                }(a, n))
            })
        }(u)) : u < .01 && $("#invest_error").text("Amount should be > 0.01") : $("#invest_error").text("Please enter correct amount")
    }), $("#invest_withdraw").on("click", function(e) {
        if (e.preventDefault(), !o || !s || !i) return 0;
        withdraw_amount = $("#f_available").text(), $.isNumeric(withdraw_amount) ? withdraw_amount > 0 && ($("#withdraw_error").text(""), withdraw_amount, contractInstance.withdraw({
            from: web3.eth.accounts[0],
            value: 0,
            gasPrice: a
        }, (e, t) => {
            t && ($("#tx_id").text("TX_ID: " + t), $("#tx-modal").modal("show"))
        })) : $("#withdraw_error").text("You have no dividends")
    }), $("#refresh_dividends").on("click", function(e) {
        if (e.preventDefault(), !o || !s || !i) return 0;
        u()
    }), $("#refresh_investments").on("click", function(e) {
        if (e.preventDefault(), !o || !s || !i) return 0;
        l()
    })
});
